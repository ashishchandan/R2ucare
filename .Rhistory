for (j in 1:km1){
marray = cbind(marray,m[,,i,j])
}
}
deb = seq(1,ncol(marray),by=s*km1)
fin = seq(15,ncol(marray),by=s*km1)
marray2 = NULL
for (j in 1:km1){
marray2 = rbind(marray2,marray[,deb[j]:fin[j]])
}
marray = cbind(released,marray2,never)
marray
source('multimarray')
setwd('/Users/gimenez/Dropbox/OG/GitHub/R2ucare/R')
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
# add spaces between columns
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# for females
X = geese.hist
freq = geese.freq
source('multimarray')
source('multimarray.R')
multimarray
multimarray(X,freq)
library(R2ucare)
?multimarray
library(R2ucare)
library(tm)
library(gdata)
library(stm)
(base_monde <- Corpus(DirSource("/Users/gimenez/Dropbox/OG/BOULOT/ENCADREMENT/Marie CHANDELIER/stm_loup/analyses_finales/MONDE_thematique_principale",encoding="utf-8"),readerControl = list(reader=readPlain, language = "fr",  load = TRUE)))
#names(base_monde)
#lapply(base_monde, as.character)
(base_nice <- Corpus(DirSource("/Users/gimenez/Dropbox/OG/BOULOT/ENCADREMENT/Marie CHANDELIER/stm_loup/analyses_finales/NICE_thematique_principale",encoding="UTF-8"), readerControl = list(reader=readPlain, language = "fr",  load = TRUE)))
#names(base_nice)
#lapply(base_nice, as.character)
load('stm_marie.RData')
install.packages("stmBrowser")
stmBrowser()
library(stmBrowser)
stmBrowser()
?stmBrowser
library(stm)
data(poliblog5k)
#Create date
dec312007 <- as.numeric(as.Date("2007-12-31"))
poliblog5k.meta$date <- as.Date(dec312007+poliblog5k.meta$day,
origin="1970-01-01")
out <- prepDocuments(poliblog5k.docs, poliblog5k.voc, poliblog5k.meta)
stm.out <- stm(out$documents, out$vocab, K=10,
prevalence=~rating + date,
data=out$meta,
max.em.its=1) #generally run models
#longer than this.
library(stmBrowser)
setwd(tempdir())
stmBrowser(stm.out, data=out$meta, c("rating", "date"),
text="text")
library(tm)
library(gdata)
library(stm)
(base_monde <- Corpus(DirSource("/Users/gimenez/Dropbox/OG/BOULOT/ENCADREMENT/Marie CHANDELIER/stm_loup/analyses_finales/MONDE_thematique_principale",encoding="utf-8"),readerControl = list(reader=readPlain, language = "fr",  load = TRUE)))
#names(base_monde)
#lapply(base_monde, as.character)
dat_monde <- read.xls("metada_principale_monde_fonction_ratio.xlsx",header=T)
dim(dat_monde)
# supprime les 3 dernieres lignes qui sont bizarres
dat_monde <- dat_monde[-c(121,122,123),]
# on vire les modalités bizarres, puis on convertit année en numérique
dat_monde$annee = factor(dat_monde$annee)
dat_monde$annee = as.numeric(levels(dat_monde$annee))[dat_monde$annee] # astuce trouvée http://tinyurl.com/hfsqtze
metadata <- data.frame(year= dat_monde$annee,title=rep('LeMonde',120))
meta(base_monde,tag=c("year","title")) <- metadata
#meta(base_monde)
#base_monde
test3Gsr(X,freq)
library(R2ucare)
warnings()
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
# add spaces between columns
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
X
freq
test3Gsr(X,freq)
test3Gsr(X,freq)
library(R2ucare)
test3Gsr(X,freq)
test3Gsr
?test3sr
library(R2ucare)
test3Gsr
deviance_mixture
library(R2ucare)
deviance_mixture
library(R2ucare)
deviance_mixture
library(R2ucare)
deviance_mixture
library(R2ucare)
deviance_mixture
gof_test.R
gof_test
gof_test()
devtools::load_all(".")
warnings()
library(R2ucare)
pooling
pooling_ct
group_data
marray
ind_test_rc
expval_table
library(R2ucare)
expval_table
library(R2ucare)
deviance_mixture
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
coef_mixtures
devtools::load_all(".")
library(R2ucare)
library(R2ucare)
expval_table
RES
source('~/Dropbox/OG/GitHub/R2ucare/R/expval_table.R')
detach("package:R2ucare", unload=TRUE)
library("R2ucare", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
deviance_mixture
library(R2ucare)
library(devtools)
library(R2ucare)
devtools::load_all("~/Dropbox/OG/GitHub/R2ucare")
coef_mixtures()
library(R2ucare)
library(R2ucare)
ind_test_22()
coef_mixtures()
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test.3.GSm
test3Gsm(X,freq)
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test.3.GSR
test3Gsr(X,freq)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test.3GWBWA
test3Gwbwa(X,freq)
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform TestM.ITEC
testMitec(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform TestM.LTEC
testMltec(X,freq)
library(R2ucare)
library(R2ucare)
library(R2ucare)
?overall_CJS
library(RMark)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = convert.inp(dipper,group.df=data.frame(sex=c('Male','Female')))
# add spaces between columns
dip.hist = matrix(as.numeric(unlist(strsplit(dipper$ch, ''))),nrow=nrow(dipper),byrow=T)
dip.freq = dipper$freq
dip.group = dipper$sex
# split the dataset in males/females
mask = (dip.group == 'Female')
dip.fem.hist = dip.hist[mask,]
dip.fem.freq = dip.freq[mask]
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
# for females
overall_CJS(dip.fem.hist, dip.fem.freq)
library(R2ucare)
library(RMark)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = convert.inp(dipper,group.df=data.frame(sex=c('Male','Female')))
# add spaces between columns
dip.hist = matrix(as.numeric(unlist(strsplit(dipper$ch, ''))),nrow=nrow(dipper),byrow=T)
dip.freq = dipper$freq
dip.group = dipper$sex
# split the dataset in males/females
mask = (dip.group == 'Female')
dip.fem.hist = dip.hist[mask,]
dip.fem.freq = dip.freq[mask]
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
# for females
overall_CJS(dip.fem.hist, dip.fem.freq)
?test3Gsr
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
test3Gsr(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
test3Gsm(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
testMitec(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
testMltec(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
test3Gwbwa(X,freq)
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
test3Gwbwa(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
test3Gsr(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
test3Gsm(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
testMitec(X,freq)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform Test3.GSR
testMltec(X,freq)
#' # read in Geese dataset
#' library(RMark)
#' geese = system.file("extdata", "geese.inp", package = "R2ucare")
#' geese = convert.inp(geese)
#'
# add spaces between columns
#' geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
#' geese.freq = geese$freq
#'
#' # encounter histories and number of individuals with corresponding histories
#' X = geese.hist
#' freq = geese.freq
#'
#' # load R2ucare package
#' library(R2ucare)
#'
res_test3Gsr = test3Gsr(X, freq)
res_test3Gsm = test3Gsm(X, freq)
res_testMitec = testMitec(X, freq)
res_testMltec = testMltec(X, freq)
stat1 = round(res_test3Gsr$test3Gsr[1] + res_test3Gsm$test3Gsm[1] + res_testMitec$testMitec[1] + res_testMltec$testMltec[1],rounding)
rounding=3
stat1 = round(res_test3Gsr$test3Gsr[1] + res_test3Gsm$test3Gsm[1] + res_testMitec$testMitec[1] + res_testMltec$testMltec[1],rounding)
stat1
dof1 = res_test3Gsr$test3Gsr[2] + res_test3Gsm$test3Gsm[2] + res_testMitec$testMitec[2] + res_testMltec$testMltec[2]
dof1
# compute each component
res_test3Gsr = test3Gsr(X, freq)
res_test3Gsm = test3Gsm(X, freq)
res_testMitec = testMitec(X, freq)
res_testMltec = testMltec(X, freq)
res_test3Gwbwa = test3Gwbwa(X, freq)
# fit Arnason-Schwarz (AS) model and get the deviance and number of estimated parameters
# fit Jolly-Move (JMV) model and get the deviance and number of estimated parameters
# compute overall test (JMV first, then AS)
stat_jmv = round(res_test3Gsr$test3Gsr[1] + res_test3Gsm$test3Gsm[1] + res_test3Gwbwa$test3Gwbwa[1] + res_testMitec$testMitec[1] + res_testMltec$testMltec[1],rounding)
dof_jmv = res_test3Gsr$test3Gsr[2] + res_test3Gsm$test3Gsm[2] + res_test3Gwbwa$test3Gwbwa[2] + res_testMitec$testMitec[2] + res_testMltec$testMltec[2]
pval_jmv = round(1 - pchisq(stat_jmv,dof_jmv),rounding)
pval_jmv
dof_jmv
stat_jmv
library(R2ucare)
?overall_JMV
library(R2ucare)
?overall_JMV
library(R2ucare)
?overall_JMV
library(R2ucare)
?overall_JMV
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform overall gof test
overall_JMV(X, freq)
library(R2ucare)
library(RMark)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = convert.inp(geese)
geese.hist = matrix(as.numeric(unlist(strsplit(geese$ch, ''))),nrow=nrow(geese),byrow=T)
geese.freq = geese$freq
# encounter histories and number of individuals with corresponding histories
X = geese.hist
freq = geese.freq
# load R2ucare package
library(R2ucare)
# perform overall gof test
overall_JMV(X, freq)
?overall_CJS
# read in Dipper dataset
library(RMark)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = convert.inp(dipper,group.df=data.frame(sex=c('Male','Female')))
# add spaces between columns
dip.hist = matrix(as.numeric(unlist(strsplit(dipper$ch, ''))),nrow=nrow(dipper),byrow=T)
dip.freq = dipper$freq
dip.group = dipper$sex
# split the dataset in males/females
mask = (dip.group == 'Female')
dip.fem.hist = dip.hist[mask,]
dip.fem.freq = dip.freq[mask]
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
# for females
overall_CJS(dip.fem.hist, dip.fem.freq)
?marray
X
X2 = X
X2[X2>1]=1
X2
dip.mal.hist
dip.mal.hist.reversed = t(apply(dip.mal.hist,1,rev))
dip.mal.hist.reversed
geese.hist
geese.hist[geese.hist>1] = 1
geese.hist
library(R2ucare)
